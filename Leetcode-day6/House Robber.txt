object Solution {
    def minimumTotal(triangle: List[List[Int]]): Int = {
        
        var n=triangle.size
        var dp=Array.fill(n)(Array.fill(n)(-1))
        return f(0,0,n,triangle,dp)
    }
    def f(i:Int,j:Int,n:Int,triangle: List[List[Int]],dp: Array[Array[Int]]):Int={

        if(i == n-1) return triangle(n-1)(j)
        if(dp(i)(j) != -1) return dp(i)(j)
        var down=triangle(i)(j)+f(i+1,j,n,triangle,dp)
        var diag=triangle(i)(j)+f(i+1,j+1,n,triangle,dp)

        dp(i)(j)=Math.min(down,diag)
        return dp(i)(j)
    }
}